[gcode_macro _DFC]
variable_coeff: 0.0
variable_max_abs_comp: 0.0 #frame comp will not go above this value
variable_enable: 1
variable_thermistor_name: "temperature_sensor frame"
################### DO NOT CHANGE ANYTHING BELOW UNLESS YOU KNOW WHAT YOU ARE DOING ####################################################
variable_ref_temp: 999
variable_cur_temp: 0
variable_dfc_z_offset: 0.0
gcode:

    {% if not ref_temp == 999 %}
      {% if enable %}
        {% set current_temp = printer[thermistor_name].temperature %}
        SET_GCODE_VARIABLE MACRO=_DFC VARIABLE=cur_temp VALUE={current_temp|float}
      {% else %}
        {% set current_temp = ref_temp %}
        SET_GCODE_VARIABLE MACRO=_DFC VARIABLE=cur_temp VALUE={printer[thermistor_name].temperature|float}
      {% endif %}
      
      {% set new_offset = ((current_temp|float - ref_temp|float) * coeff|float) * (-1) %}
      {% if new_offset|float > max_abs_comp|float and not max_abs_comp == 0 %} #limit frame comp value by max abs if set
        {% set new_offset = max_abs_comp %}
      {% elif new_offset|float < (max_abs_comp|float*(-1)) and not max_abs_comp == 0 %} #same, but negative
        {% set new_offset = max_abs_comp*(-1) %}
      {% endif %}
      SET_GCODE_OFFSET Z_ADJUST={new_offset|float - (dfc_z_offset|float)} MOVE=1
      SET_GCODE_VARIABLE MACRO=_DFC VARIABLE=dfc_z_offset VALUE={new_offset|float}
    {% endif %}

[delayed_gcode RUN_DFC]
initial_duration: 1
gcode:
  UPDATE_DELAYED_GCODE ID=RUN_DFC DURATION=10
  _DFC

[gcode_macro _LOG_REF_TEMP]
gcode:
    {% set thermistor_name = printer["gcode_macro _DFC"].thermistor_name %}
    SET_GCODE_VARIABLE MACRO=_DFC VARIABLE=ref_temp VALUE={printer[thermistor_name].temperature|float}

[gcode_macro SET_DFC]
gcode:
    #get current state if not provided by params
    {% set ENABLE = params.ENABLE|default(printer["gcode_macro _DFC"].enable)|string %}
    {% if ENABLE == "0" or ENABLE == "1" %}
      {% set cur_temp = printer["gcode_macro _DFC"].cur_temp %}
      {% set enabled = printer["gcode_macro _DFC"].enable %}

      {% if not enabled|int == ENABLE|int %}
        SET_GCODE_VARIABLE MACRO=_DFC VARIABLE=enable VALUE={ENABLE}
        {% if not cur_temp == 0 %}
          _DFC SAFE_MODE=0
        {% endif %}
      {% endif %}
      QUERY_DFC
    {% else %}
      { action_respond_info("Invalid parameter ENABLE value '%s' - must be 0 or 1" % (ENABLE|int)) }
    {% endif %}

[gcode_macro QUERY_DFC]
gcode:
    {% set ref_temp = printer["gcode_macro _DFC"].ref_temp %}
    {% set cur_temp = printer["gcode_macro _DFC"].cur_temp %}
    {% set dfc_z_offset = printer["gcode_macro _DFC"].dfc_z_offset %}
    {% set max_abs_comp = printer["gcode_macro _DFC"].max_abs_comp %}
    {% set coeff = printer["gcode_macro _DFC"].coeff %}
    {% set enabled = printer["gcode_macro _DFC"].enable %}
    { action_respond_info("DFC: \n Reference temperature: %s C \n Last measured temperature: %s C \n Expansion coefficient: %s mm/K \n Enabled: %s \n Maximum offset: %s \n DFC Z offset: %s mm" % (ref_temp, cur_temp, coeff, enabled, max_abs_comp, dfc_z_offset))}








